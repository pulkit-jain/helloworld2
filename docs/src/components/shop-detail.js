define(["exports","./shop-app.js"],function(_exports,_shopApp){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.unsafeHTML=_exports.$unsafeHtml=void 0;function _templateObject_bc7156c026b211ea9285cd566ef2ea4b(){var data=babelHelpers.taggedTemplateLiteral(["\n    ","\n    ","\n    ","\n    <style>\n\n      :host {\n        display: block;\n      }\n\n      #content {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n      }\n\n      shop-image {\n        position: relative;\n        margin: 64px 32px;\n        width: 50%;\n        max-width: 600px;\n      }\n\n      shop-image::before {\n        content: \"\";\n        display: block;\n        padding-top: 100%;\n      }\n\n      .detail {\n        margin: 64px 32px;\n        width: 50%;\n        max-width: 400px;\n        transition: opacity 0.4s;\n        opacity: 0;\n      }\n\n      .detail[has-content] {\n        opacity: 1;\n      }\n\n      h1 {\n        font-size: 24px;\n        font-weight: 500;\n        line-height: 28px;\n        margin: 0;\n      }\n\n      .price {\n        margin: 16px 0 40px;\n        font-size: 16px;\n        color: var(--app-secondary-color);\n      }\n\n      .description {\n        margin: 32px 0;\n      }\n\n      .description > h2 {\n        margin: 16px 0;\n        font-size: 13px;\n      }\n\n      .description > p {\n        margin: 0;\n        color: var(--app-secondary-color);\n      }\n\n      .pickers {\n        display: flex;\n        flex-direction: column;\n        border-top: 1px solid #ccc;\n      }\n\n      /* Add more specificity (.pickers) to workaround an issue in lit-element:\n         https://github.com/PolymerLabs/lit-element/issues/34 */\n      .pickers > shop-select > select {\n        font-size: 16px;\n        padding: 16px 24px 16px 70px;\n      }\n\n      @media (max-width: 767px) {\n\n        #content {\n          flex-direction: column;\n          align-items: center;\n        }\n\n        shop-image {\n          margin: 0;\n          width: 80%;\n        }\n\n        .detail {\n          box-sizing: border-box;\n          margin: 32px 0;\n          padding: 0 24px;\n          width: 100%;\n          max-width: 600px;\n        }\n\n        h1 {\n          font-size: 20px;\n          line-height: 24px;\n        }\n\n        .price {\n          font-size: inherit;\n          margin: 12px 0 32px;\n        }\n\n      }\n\n    </style>\n\n    <div id=\"content\" ?hidden=\"","\">\n      <shop-image alt=\"","\" src=\"","\"></shop-image>\n      <div class=\"detail\" has-content>\n        <h1>","</h1>\n        <div class=\"price\">","</div>\n        <div class=\"pickers\">\n          <shop-select>\n            <label id=\"sizeLabel\" prefix>Size</label>\n            <select id=\"sizeSelect\" aria-labelledby=\"sizeLabel\">\n              <option value=\"XS\">XS</option>\n              <option value=\"S\">S</option>\n              <option value=\"M\" selected>M</option>\n              <option value=\"L\">L</option>\n              <option value=\"XL\">XL</option>\n            </select>\n            <shop-md-decorator aria-hidden=\"true\">\n              <shop-underline></shop-underline>\n            </shop-md-decorator>\n          </shop-select>\n          <shop-select>\n            <label id=\"quantityLabel\" prefix>Quantity</label>\n            <select id=\"quantitySelect\" aria-labelledby=\"quantityLabel\">\n              <option value=\"1\" selected>1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n            <shop-md-decorator aria-hidden=\"true\">\n              <shop-underline></shop-underline>\n            </shop-md-decorator>\n          </shop-select>\n        </div>\n        <div class=\"description\">\n          <h2>Description</h2>\n          <p>","</p>\n        </div>\n        <shop-button responsive>\n          <button @click=\"","\" aria-label=\"Add this item to cart\">\n            Add to Cart\n          </button>\n        </shop-button>\n      </div>\n    </div>\n\n    <!--\n      shop-network-warning shows a warning message when the items can't be rendered due\n      to network conditions.\n    -->\n    <shop-network-warning ?hidden=\"","\"></shop-network-warning>"]);_templateObject_bc7156c026b211ea9285cd566ef2ea4b=function _templateObject_bc7156c026b211ea9285cd566ef2ea4b(){return data};return data}// unsafeHTML directive, and the DocumentFragment that was last set as a value.
// The DocumentFragment is used as a unique key to check if the last value
// rendered to the part was with unsafeHTML. If not, we'll always re-render the
// value passed to unsafeHTML.
var previousValues=new WeakMap,unsafeHTML=(0,_shopApp.directive)(function(value){return function(part){if(!babelHelpers.instanceof(part,_shopApp.NodePart)){throw new Error("unsafeHTML can only be used in text bindings")}var previousValue=previousValues.get(part);if(previousValue!==void 0&&(0,_shopApp.isPrimitive)(value)&&value===previousValue.value&&part.value===previousValue.fragment){return}var template=document.createElement("template");template.innerHTML=value;// innerHTML casts to string internally
var fragment=document.importNode(template.content,!0);part.setValue(fragment);previousValues.set(part,{value:value,fragment:fragment})}});/**
                                       * Renders the result as HTML, rather than text.
                                       *
                                       * Note, this is unsafe to use with any user-provided input that hasn't been
                                       * sanitized or escaped, as it may lead to cross-site-scripting
                                       * vulnerabilities.
                                       */_exports.unsafeHTML=unsafeHTML;var unsafeHtml={unsafeHTML:unsafeHTML};_exports.$unsafeHtml=unsafeHtml;var ShopDetail=/*#__PURE__*/function(_connect){babelHelpers.inherits(ShopDetail,_connect);function ShopDetail(){babelHelpers.classCallCheck(this,ShopDetail);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(ShopDetail).apply(this,arguments))}babelHelpers.createClass(ShopDetail,[{key:"render",value:function render(){return(0,_shopApp.html)(_templateObject_bc7156c026b211ea9285cd566ef2ea4b(),_shopApp.shopButtonStyle,_shopApp.shopCommonStyle,_shopApp.shopSelectStyle,this._failure||!this._item,this._item.title,this._item.largeImage,this._item.title,this._item.price?"$".concat(this._item.price.toFixed(2)):null,this._item?unsafeHTML(this._unescapeText(this._item.description)):null,this._addToCart,!this._failure)}},{key:"stateChanged",value:function stateChanged(state){var category=(0,_shopApp.currentCategorySelector)(state);this._item=(0,_shopApp.currentItemSelector)(state)||{};this._failure=category&&category.failure}},{key:"_unescapeText",value:function _unescapeText(text){// The item description contains escaped HTML (e.g. "&lt;br&gt;"), so we need to
// unescape it ("<br>") and set it as innerHTML.
var elem=document.createElement("textarea");elem.innerHTML=text;return elem.textContent}},{key:"_addToCart",value:function _addToCart(){var quantitySelect=this.shadowRoot.querySelector("#quantitySelect"),sizeSelect=this.shadowRoot.querySelector("#sizeSelect");_shopApp.store.dispatch((0,_shopApp.addToCart)({item:this._item,quantity:parseInt(quantitySelect.value,10),size:sizeSelect.value}))}},{key:"_isDefined",value:function _isDefined(item){return null!=item}}],[{key:"properties",get:function get(){return{_item:{type:Object},_failure:{type:Boolean}}}}]);return ShopDetail}((0,_shopApp.connect)(_shopApp.store)(_shopApp.PageViewElement));customElements.define("shop-detail",ShopDetail)});